/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
 // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
 //Añado el plugin para eclipse
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
tasks.withType(JavaCompile) {  
    options.deprecation = true  
    options.encoding = 'UTF-8'
}
dependencies {

   //Nuestra biblioteca usa la API JPA para persistencia
   implementation group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.1.1'
   //Para poder ligar automáticamente un bean con una vista y facilitar la creación de la interfaz gráfica
   implementation group: 'org.jdesktop', name: 'beansbinding', version: '1.2.1'
	
   //El proveedor de JPA que vamos a usar es eclipselink
   implementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.8'

	//Usaremos la base de datos h2, una base de datos ligera en memoria (la información no persiste en realidad, sólo durante la ejecución)
	//implementation 'com.h2database:h2'
	implementation group: 'com.h2database', name: 'h2', version: '1.4.200'

	
    // Usamos la API JUnit Jupiter para las pruebas de cÃ³digo
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
	testImplementation 'org.junit.platform:junit-platform-engine:1.9.3'

	//Las siguientes dos dependencias las introduce gradle automÃ¡ticamente

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
       
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
